#version 450
#extension GL_ARB_separate_shader_objects : enable

layout(std430, binding = 0) readonly buffer Vertices {
    Vertex vertices[];
};

layout(std430, binding = 1) writeonly buffer AABBs {
    AABB leaves[];
};

struct AABB {
    vec3 min;
    vec3 max;
};

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() {

    if (vertices.length() == 0) return;

    uint idx = gl_GlobalInvocationID.x;
    uint requiredThreads = (vertices.length() + 1) / 2;

    if (idx >= requiredThreads) return;

    uint left = idx * 2;
    uint right = min(left + 1, vertices.length() - 1);

    vec3 pos1 = vertices[left].pos_density.xyz;
    vec3 pos2 = vertices[right].pos_density.xyz;

    leaves[idx].min = min(pos1, pos2);
    leaves[idx].max = max(pos1, pos2);
}