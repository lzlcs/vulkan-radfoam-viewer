#version 450
#extension GL_ARB_separate_shader_objects : enable

struct AABB {
    vec3 min;
    vec3 max;
};

struct Vertex {
    // 4 Bytes
    vec3 pos; 
    int padding1;
    // 4 Bytes
    float density;
    int offset;
    vec2 padding2;

    float sh_coeffs[48];
};


layout(std430, binding = 0) readonly buffer Vertices {
    Vertex vertices[];
};

layout(std430, binding = 1) writeonly buffer AABBs {
    AABB leaves[];
};

layout(local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main() {

    uint idx = gl_GlobalInvocationID.x;

    uint left = min(idx * 2, vertices.length() - 1);
    uint right = min(left + 1, vertices.length() - 1);

    vec3 pos1 = vertices[left].pos;
    vec3 pos2 = vertices[right].pos;

    leaves[idx].min = vec3(min(pos1.x, pos2.x), min(pos1.y, pos2.y), min(pos1.z, pos2.z));
    leaves[idx].max = vec3(max(pos1.x, pos2.x), max(pos1.y, pos2.y), max(pos1.z, pos2.z));
}